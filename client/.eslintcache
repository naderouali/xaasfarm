[{"C:\\codes\\xaasfarm\\client\\src\\index.js":"1","C:\\codes\\xaasfarm\\client\\src\\App.js":"2","C:\\codes\\xaasfarm\\client\\src\\reportWebVitals.js":"3","C:\\codes\\xaasfarm\\client\\src\\components\\Navbar.js":"4","C:\\codes\\xaasfarm\\client\\src\\views\\Login.js":"5","C:\\codes\\xaasfarm\\client\\src\\views\\Register.js":"6","C:\\codes\\xaasfarm\\client\\src\\views\\Profile.js":"7","C:\\codes\\xaasfarm\\client\\src\\views\\Home.js":"8"},{"size":589,"mtime":1611684103887,"results":"9","hashOfConfig":"10"},{"size":1749,"mtime":1611918769236,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4451,"mtime":1611917406627,"results":"13","hashOfConfig":"10"},{"size":2646,"mtime":1611917480680,"results":"14","hashOfConfig":"10"},{"size":4341,"mtime":1611948426052,"results":"15","hashOfConfig":"10"},{"size":1560,"mtime":1611684134711,"results":"16","hashOfConfig":"10"},{"size":183,"mtime":1611852869445,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ytry51",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\codes\\xaasfarm\\client\\src\\index.js",[],["38","39"],"C:\\codes\\xaasfarm\\client\\src\\App.js",["40","41"],"import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useHistory, useLocation } from \"react-router-dom\";\nimport { reactLocalStorage as Ls } from 'reactjs-localstorage';\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n// import Home from \"./views/HomePage\";\nimport Home from \"./views/Home\";\nimport Login from \"./views/Login\";\nimport Register from \"./views/Register\";\nimport Profile from \"./views/Profile\";\nimport jwt_decode from \"jwt-decode\";\n\n\nconst App = () => {\n\n  let location = useLocation();\n\n  var history = useHistory();\n\n  useEffect(() => {\n\n    var session = Ls.getObject('session', { 'isLoggedIn': false });\n\n    if (location.pathname.includes(\"/register\")) {\n\n      console.log(\"register\");\n\n    } else if (location.pathname.includes(\"/login\")) {\n\n      console.log(\"register\")\n\n    } else if (!session.isLoggedIn) {\n      history.push(\"/login\");\n    } else {\n      var isExpired = false;\n      const token = session.token;\n      console.log(token);\n      var decodedToken = jwt_decode(token, { complete: true });\n      // console.log(decodedToken);\n      var dateNow = new Date();\n      if (decodedToken.exp < dateNow.getTime() / 1000)\n        isExpired = true;\n\n      if (isExpired) {\n        history.push(\"/login\");\n      }\n\n    }\n\n  }, []);\n\n  const doLogout = async () => {\n\n    Ls.remove('session');\n    history.push(\"/login\");\n\n  }\n\n\n  return (\n    <>\n      <Navbar style={{}} doLogout={doLogout} />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/profile\" component={Profile} />\n\n      </Switch>\n    </>\n\n  );\n};\n\n\nexport default App;","C:\\codes\\xaasfarm\\client\\src\\reportWebVitals.js",[],"C:\\codes\\xaasfarm\\client\\src\\components\\Navbar.js",["42","43","44","45","46","47","48","49","50","51"],"import React, { useState } from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { reactLocalStorage as Ls } from 'reactjs-localstorage';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport \"../Navbar.css\";\r\n\r\nexport default function NavbarF({ doLogout }) {\r\n\r\n\r\n    const [menuActive, setMenuActive] = useState(false)\r\n\r\n    const ShowSettings = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    const closeBurger = (e) => {\r\n        console.log(\"clicked\")\r\n    }\r\n\r\n    // const classes = useStyles();\r\n    return (\r\n\r\n        <>\r\n            <input type=\"checkbox\" checked={menuActive} onChange={(e) => setMenuActive(!menuActive)} id=\"menu-toggle\" />\r\n            <label id=\"trigger\" for=\"menu-toggle\" ></label>\r\n            <label id=\"burger\" for=\"menu-toggle\" ></label>\r\n            <ul id=\"menu\">\r\n\r\n                {Ls.getObject('session', { 'isLoggedIn': false }).isLoggedIn ?\r\n                    <>\r\n                        <li><NavLink onClick={(e) => setMenuActive(!menuActive)} to=\"/\" >Home</NavLink></li>\r\n                        <li><NavLink onClick={(e) => setMenuActive(!menuActive)} to=\"/profile\" >Profile</NavLink></li>\r\n                        <li><NavLink onClick={doLogout} to=\"/login\" >Log out</NavLink></li>\r\n\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <li><NavLink onClick={(e) => setMenuActive(!menuActive)} to=\"/\" >Home</NavLink></li>\r\n                        <li><NavLink onClick={(e) => setMenuActive(!menuActive)} to=\"/login\" >Login</NavLink></li>\r\n                        <li><NavLink onClick={(e) => setMenuActive(!menuActive)} to=\"/register\" >Register</NavLink></li>\r\n\r\n                    </>}\r\n            </ul>\r\n        </>\r\n\r\n        // <Navbar className=\"RegularFont\" style={{ backgroundColor: \"#820b70\" }} expand=\"lg\">\r\n        //     <Navbar.Brand><NavLink to=\"/\"><b>App.Maker</b></NavLink></Navbar.Brand>\r\n        //     <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        //     <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        //         <Nav className=\"mr-auto\">\r\n        //             <NavDropdown title=\"App\" id=\"basic-nav-dropdown\">\r\n        //                 <NavDropdown.Item href=\"#action/3.1\">Open</NavDropdown.Item>\r\n        //                 <NavDropdown.Item href=\"#action/3.2\">Save</NavDropdown.Item>\r\n        //                 <NavDropdown.Item href=\"#action/3.3\">Build</NavDropdown.Item>\r\n        //                 <NavDropdown.Divider />\r\n        //                 <NavDropdown.Item href=\"#action/3.4\">Close</NavDropdown.Item>\r\n        //             </NavDropdown>\r\n        //         </Nav>\r\n        //         <Nav>\r\n\r\n\r\n        //             {Ls.getObject('session', { 'isLoggedIn': false }).isLoggedIn ?\r\n        //                 <>\r\n        //                     <NavLink style={{ color: \"white\", textDecoration: \"none\", paddingLeft: '3vh' }} activeStyle={{ color: \"white\" }} to=\"/assets\" >my assets</NavLink>\r\n        //                     <NavLink style={{ color: \"white\", textDecoration: \"none\", paddingLeft: '3vh' }} activeStyle={{ color: \"white\" }} to=\"/profile\" >profil</NavLink>\r\n        //                     <NavLink style={{ color: \"white\", textDecoration: \"none\", paddingLeft: '3vh' }} activeStyle={{ color: \"white\" }} onClick={doLogout} to=\"/login\" >log out</NavLink>\r\n        //                 </>\r\n        //                 :\r\n        //                 <>\r\n        //                     <NavLink style={{ color: \"white\", textDecoration: \"none\", paddingLeft: '3vh' }} activeStyle={{ color: \"white\" }} to=\"/\" >Home</NavLink>\r\n        //                     <NavLink style={{ color: \"white\", textDecoration: \"none\", paddingLeft: '3vh' }} activeStyle={{ color: \"white\" }} to=\"/login\" >login</NavLink>\r\n        //                     <NavLink style={{ color: \"white\", textDecoration: \"none\", paddingLeft: '3vh' }} activeStyle={{ color: \"white\" }} to=\"/register\" >cr√©er compte</NavLink>\r\n        //                 </>}\r\n\r\n\r\n        //         </Nav>\r\n        //     </Navbar.Collapse>\r\n        // </Navbar>\r\n    );\r\n}","C:\\codes\\xaasfarm\\client\\src\\views\\Login.js",["52"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { reactLocalStorage as Ls } from 'reactjs-localstorage';\r\nimport logo from \"../medias/xaasfarm.png\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function Login() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    var history = useHistory();\r\n\r\n    const onSubmit = () => {\r\n        const user = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        axios\r\n            .post(\"/api/user/login\", user)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n\r\n                Ls.setObject(\"session\", { token: res.data, isLoggedIn: true });\r\n\r\n                history.push(\"/profile\")\r\n            })\r\n        // window.location = \"/users/profile\";\r\n\r\n    }\r\n\r\n\r\n    const handleEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            onSubmit();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{ backgroundColor: \"#b9b9b9\" }}>\r\n            <div className=\"RegularFont\" style={{ backgroundColor: '#b9b9b9', minHeight: \"100vh\", marginLeft: '20%', marginRight: '20%', display: 'flex', flexDirection: 'column', gap: '30px', padding: '6%' }}>\r\n                {/* logo */}\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <img src={logo} style={{ display: 'flex', alignItems: 'center', width: '50%', maxWidth: '90%', marginLeft: 'auto', marginRight: 'auto' }} />\r\n                </div>\r\n                <div style={{ color: '#212121', fontSize: 30 }}>Log in</div>\r\n                {/* fields */}\r\n                <TextField id=\"outlined-basic\" reauired label=\"E-mail\" variant=\"outlined\" value={email} onChange={(e) => { setEmail(e.target.value); }} />\r\n                <TextField id=\"outlined-basic\" reauired type=\"password\" label=\"Password\" variant=\"outlined\" value={password} onChange={(e) => { setPassword(e.target.value); }} onKeyPress={handleEnter} />\r\n                <Button onClick={onSubmit} variant=\"contained\" color=\"primary\" style={{ color: 'white', backgroundColor: '#72a54b' }}>\r\n                    Log in\r\n                </Button>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <NavLink to=\"/register\" style={{ color: 'black', fontSize: 14 }} >Don't have an account? Create one now</NavLink>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n","C:\\codes\\xaasfarm\\client\\src\\views\\Register.js",["53","54","55","56"],"C:\\codes\\xaasfarm\\client\\src\\views\\Profile.js",[],"C:\\codes\\xaasfarm\\client\\src\\views\\Home.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":27,"nodeType":"63","messageId":"64","endLine":2,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":50,"column":6,"nodeType":"67","endLine":50,"endColumn":8,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"69","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":20},{"ruleId":"61","severity":1,"message":"70","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":14},{"ruleId":"61","severity":1,"message":"71","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":15},{"ruleId":"61","severity":1,"message":"72","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":18},{"ruleId":"61","severity":1,"message":"73","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":14},{"ruleId":"61","severity":1,"message":"74","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":18},{"ruleId":"61","severity":1,"message":"75","line":10,"column":8,"nodeType":"63","messageId":"64","endLine":10,"endColumn":16},{"ruleId":"61","severity":1,"message":"76","line":11,"column":19,"nodeType":"63","messageId":"64","endLine":11,"endColumn":23},{"ruleId":"61","severity":1,"message":"77","line":19,"column":11,"nodeType":"63","messageId":"64","endLine":19,"endColumn":23},{"ruleId":"61","severity":1,"message":"78","line":22,"column":11,"nodeType":"63","messageId":"64","endLine":22,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":49,"column":21,"nodeType":"81","endLine":49,"endColumn":161},{"ruleId":"61","severity":1,"message":"82","line":11,"column":5,"nodeType":"63","messageId":"64","endLine":11,"endColumn":23},{"ruleId":"61","severity":1,"message":"83","line":21,"column":12,"nodeType":"63","messageId":"64","endLine":21,"endColumn":20},{"ruleId":"61","severity":1,"message":"84","line":21,"column":22,"nodeType":"63","messageId":"64","endLine":21,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":62,"column":21,"nodeType":"81","endLine":62,"endColumn":161},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["87"],"'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Menu' is defined but never used.","'ShowSettings' is assigned a value but never used.","'closeBurger' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'KeyboardTimePicker' is defined but never used.","'birthday' is assigned a value but never used.","'setBirthday' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [history, location.pathname]",{"range":"90","text":"91"},[1302,1304],"[history, location.pathname]"]
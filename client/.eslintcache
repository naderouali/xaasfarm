[{"C:\\codes\\xaasfarm\\client\\src\\index.js":"1","C:\\codes\\xaasfarm\\client\\src\\App.js":"2","C:\\codes\\xaasfarm\\client\\src\\reportWebVitals.js":"3","C:\\codes\\xaasfarm\\client\\src\\components\\Navbar.js":"4","C:\\codes\\xaasfarm\\client\\src\\views\\Login.js":"5","C:\\codes\\xaasfarm\\client\\src\\views\\Register.js":"6","C:\\codes\\xaasfarm\\client\\src\\views\\Profile.js":"7","C:\\codes\\xaasfarm\\client\\src\\views\\Home.js":"8","C:\\codes\\xaasfarm\\client\\src\\views\\Images.js":"9","C:\\codes\\xaasfarm\\client\\src\\components\\Modale.js":"10","C:\\codes\\xaasfarm\\client\\src\\components\\Image.js":"11"},{"size":589,"mtime":1611684103887,"results":"12","hashOfConfig":"13"},{"size":1773,"mtime":1612131030130,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1953,"mtime":1612199297135,"results":"16","hashOfConfig":"13"},{"size":3076,"mtime":1612199297138,"results":"17","hashOfConfig":"13"},{"size":5262,"mtime":1612199297154,"results":"18","hashOfConfig":"13"},{"size":2972,"mtime":1612199297149,"results":"19","hashOfConfig":"13"},{"size":748,"mtime":1612020456033,"results":"20","hashOfConfig":"13"},{"size":4524,"mtime":1612199297137,"results":"21","hashOfConfig":"13"},{"size":2160,"mtime":1612185407487,"results":"22","hashOfConfig":"13"},{"size":1286,"mtime":1612184975972,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ytry51",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\codes\\xaasfarm\\client\\src\\index.js",[],"C:\\codes\\xaasfarm\\client\\src\\App.js",["51"],"C:\\codes\\xaasfarm\\client\\src\\reportWebVitals.js",[],"C:\\codes\\xaasfarm\\client\\src\\components\\Navbar.js",["52","53"],"C:\\codes\\xaasfarm\\client\\src\\views\\Login.js",["54"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { reactLocalStorage as Ls } from 'reactjs-localstorage';\r\nimport logo from \"../medias/xaasfarm.png\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function Login() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    var history = useHistory();\r\n\r\n    const onSubmit = () => {\r\n        if (!email) {\r\n            alert('Fill up E-mail');\r\n            return;\r\n        }\r\n\r\n        if (!password) {\r\n            alert('Fill up Password');\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        const user = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        axios\r\n            .post(\"/api/user/login\", user)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n\r\n                if (res.data.success) {\r\n\r\n                    Ls.setObject(\"session\", { token: res.data.token, isLoggedIn: true });\r\n                    history.push(\"/profile\")\r\n\r\n                } else if (res.data.message === \"user-not-found\") {\r\n                    alert(\"Wrong e-mail or password\");\r\n                    setEmail(\"\")\r\n                    setPassword(\"\")\r\n                }\r\n\r\n\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            onSubmit();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{ backgroundColor: \"#b9b9b9\" }}>\r\n            <div className=\"RegularFont\" style={{ backgroundColor: '#b9b9b9', minHeight: \"100vh\", marginLeft: '20%', marginRight: '20%', display: 'flex', flexDirection: 'column', gap: '30px', padding: '6%' }}>\r\n                {/* logo */}\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <img src={logo} style={{ display: 'flex', alignItems: 'center', width: '50%', maxWidth: '90%', marginLeft: 'auto', marginRight: 'auto' }} />\r\n                </div>\r\n                <div style={{ color: '#212121', fontSize: 30 }}>Log in</div>\r\n                {/* fields */}\r\n                <TextField id=\"outlined-basic\" reauired label=\"E-mail\" variant=\"outlined\" value={email} onChange={(e) => { setEmail(e.target.value); }} />\r\n                <TextField id=\"outlined-basic\" reauired type=\"password\" label=\"Password\" variant=\"outlined\" value={password} onChange={(e) => { setPassword(e.target.value); }} onKeyPress={handleEnter} />\r\n                <Button onClick={onSubmit} variant=\"contained\" color=\"primary\" style={{ color: 'white', backgroundColor: '#72a54b' }}>\r\n                    Log in\r\n                </Button>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <NavLink to=\"/register\" style={{ color: 'black', fontSize: 14 }} >Don't have an account? Create one now</NavLink>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n",["55","56"],"C:\\codes\\xaasfarm\\client\\src\\views\\Register.js",["57","58","59"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport logo from \"../medias/xaasfarm.png\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function RegisterForm() {\r\n\r\n    var history = useHistory();\r\n\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    // const [birthday, setBirthday] = useState(new Date());\r\n\r\n\r\n\r\n    const onSubmit = () => {\r\n        if (!firstname) {\r\n            alert('Fill up your first name');\r\n            return;\r\n        }\r\n        if (!lastname) {\r\n            alert('Fill up your last name');\r\n            return;\r\n        }\r\n        if (!email) {\r\n            alert('Fill up your e-mail');\r\n            return;\r\n        }\r\n        if (!password) {\r\n            alert('Fill up your password');\r\n            return;\r\n        }\r\n\r\n        if (!verifyEmail(email)) {\r\n            return;\r\n        }\r\n        else {\r\n            const user = {\r\n                firstname: firstname,\r\n                lastname: lastname,\r\n                email: email,\r\n                password: password,\r\n                birthday: selectedDate\r\n            };\r\n            console.log(user);\r\n            axios\r\n                .post(\"api/user/register\", user)\r\n                .then((res) => {\r\n                    console.log(res.data)\r\n\r\n\r\n                    history.push(\"/login\")\r\n\r\n\r\n\r\n\r\n                })\r\n\r\n\r\n                .catch((error) => console.log(error.response.request._response));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            onSubmit();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    const [selectedDate, setSelectedDate] = useState(\"01-01-1978\");\r\n\r\n    const handleDateChange = (date) => {\r\n        var selectedDate = (date.getMonth() + 1) + '-' + date.getDate() + '-' + date.getFullYear();\r\n        setSelectedDate(selectedDate);\r\n        console.log(selectedDate);\r\n    };\r\n\r\n    const verifyEmail = temp => {\r\n        console.log(temp)\r\n        //no special characters allowed only alphabet and numbers with max length 10\r\n        const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n\r\n        if (!temp.match(regex)) {\r\n            alert('mail invalid')\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div style={{ backgroundColor: \"#b9b9b9\" }}>\r\n            <div className=\"RegularFont\" style={{ backgroundColor: '#b9b9b9', minHeight: \"100vh\", marginLeft: '20%', marginRight: '20%', display: 'flex', flexDirection: 'column', gap: '30px', padding: '6%' }}>\r\n                {/* logo */}\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <img src={logo} style={{ display: 'flex', alignItems: 'center', width: '50%', maxWidth: '90%', marginLeft: 'auto', marginRight: 'auto' }} />\r\n                </div>\r\n\r\n                <div style={{ color: '#212121', fontSize: 30 }}>Join us</div>\r\n\r\n                {/* Fields */}\r\n                <TextField id=\"outlined-basic\" reauired label=\"First name\" variant=\"outlined\" value={firstname} onChange={(e) => { setFirstname(e.target.value); }} />\r\n                <TextField id=\"outlined-basic\" reauired label=\"Last name\" variant=\"outlined\" value={lastname} onChange={(e) => { setLastname(e.target.value); }} />\r\n\r\n                <TextField id=\"outlined-basic\" reauired label=\"E-mail\" variant=\"outlined\" value={email} onChange={(e) => { setEmail(e.target.value); }} />\r\n                <TextField id=\"outlined-basic\" reauired type=\"password\" label=\"Password\" variant=\"outlined\" value={password} onChange={(e) => { setPassword(e.target.value); }} onKeyPress={handleEnter} />\r\n                {/* <TextField id=\"outlined-basic\" reauired label=\"Birthday\" variant=\"outlined\" value={birthday} onChange={(e) => { setBirthday(e.target.value); }} onKeyPress={handleEnter} /> */}\r\n\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Birthday\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <Button onClick={onSubmit} variant=\"contained\" color=\"primary\" style={{ color: 'white', backgroundColor: '#72a54b' }}>\r\n                    Create account\r\n                </Button>\r\n\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <NavLink to=\"/login\" style={{ color: 'black', fontSize: 14 }} >Already have an account? Log in here</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","C:\\codes\\xaasfarm\\client\\src\\views\\Profile.js",["60","61"],"import React, { useEffect, useState } from \"react\";\r\nimport { reactLocalStorage as Ls } from 'reactjs-localstorage';\r\nimport axios from \"axios\";\r\nimport Image from '../components/Image';\r\n\r\nexport default function Profile() {\r\n\r\n\r\n\r\n    const [user, setUser] = useState({});\r\n    const [images, setImages] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        const getUserInfo = () => {\r\n\r\n            var session = Ls.getObject('session', { 'isLoggedIn': false });\r\n\r\n            let config = {\r\n                headers: {\r\n                    \"auth-token\": session.token,\r\n                }\r\n            }\r\n\r\n            axios\r\n                .post(\"/api/user/profile/\", {}, config)\r\n                .then((response) => {\r\n\r\n                    let res = response.data;\r\n\r\n                    if (res.success) {\r\n                        setUser(response.data.user);\r\n                    } else {\r\n                        if (res.message === \"user-not-found\") {\r\n                            console.log(\"user not found\")\r\n                        } else {\r\n                            console.log(\"another error\")\r\n                        }\r\n                    }\r\n\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        getUserInfo();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        var session = Ls.getObject(\"session\", { isLoggedIn: false });\r\n\r\n        let config = {\r\n            headers: {\r\n                \"auth-token\": session.token,\r\n            }\r\n        }\r\n\r\n        let data = {}\r\n\r\n        axios.post(\"/api/image/read/all\", data, config)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                let response = res.data;\r\n\r\n                if (response.success) {\r\n                    setImages(response.images)\r\n                }\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#b9b9b9', minHeight: '100vh' }}>\r\n            <div style={{ fontSize: 40, textAlign: 'center', paddingTop: 15, fontWeight: 'bold' }}>Hello {user.firstname}</div>\r\n            <div style={{ fontSize: 20, textAlign: 'center', paddingTop: 15 }}>Here are the images you purchased</div>\r\n\r\n            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: 15, justifyContent: 'center', padding: '5%' }}>\r\n\r\n                {images.map(item => (\r\n                    <>\r\n                        {user.ownedImages.includes(item._id) && <Image\r\n                            key={item._id}\r\n                            url={item.url}\r\n                            name={item.name}\r\n                            price={item.price}\r\n                            inProfile={true}\r\n                            owned={user.ownedImages.includes(item._id)}\r\n\r\n\r\n                        />\r\n                        }\r\n                    </>\r\n                ))}\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","C:\\codes\\xaasfarm\\client\\src\\views\\Home.js",[],"C:\\codes\\xaasfarm\\client\\src\\views\\Images.js",["62"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from \"axios\";\r\nimport Modale from \"../components/Modale\";\r\nimport Image from '../components/Image';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { reactLocalStorage as Ls } from 'reactjs-localstorage';\r\n\r\nexport default function Images() {\r\n\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    const [selectedImage, setSelectedImage] = useState({\r\n        url: \"\",\r\n        name: \"\",\r\n        price: \"\",\r\n        _id: \"\"\r\n    })\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    var history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const getUserInfo = () => {\r\n\r\n            var session = Ls.getObject('session', { 'isLoggedIn': false });\r\n\r\n            let config = {\r\n                headers: {\r\n                    \"auth-token\": session.token,\r\n                }\r\n            }\r\n\r\n            axios\r\n                .post(\"/api/user/profile/\", {}, config)\r\n                .then((response) => {\r\n                    // console.log(response)\r\n\r\n                    let res = response.data;\r\n\r\n                    if (res.success) {\r\n                        setUser(response.data.user);\r\n                    } else {\r\n                        if (res.message === \"user-not-found\") {\r\n                            console.log(\"user not found\")\r\n                        } else {\r\n                            console.log(\"another error\")\r\n                        }\r\n                    }\r\n\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        getUserInfo();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        var session = Ls.getObject(\"session\", { isLoggedIn: false });\r\n\r\n        let config = {\r\n            headers: {\r\n                \"auth-token\": session.token,\r\n            }\r\n        }\r\n\r\n        let data = {}\r\n\r\n        axios.post(\"/api/image/read/all\", data, config)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                let response = res.data;\r\n\r\n                if (response.success) {\r\n                    setImages(response.images)\r\n                }\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n    const onBuy = () => {\r\n\r\n        var session = Ls.getObject(\"session\", { isLoggedIn: false });\r\n\r\n        let config = {\r\n            headers: {\r\n                \"auth-token\": session.token,\r\n            }\r\n        }\r\n\r\n        console.log(selectedImage)\r\n\r\n        let data = {\r\n            imageId: selectedImage._id\r\n        }\r\n\r\n        axios.post(\"/api/user/image/buy\", data, config)\r\n            .then(res => {\r\n                console.log(res.data)\r\n\r\n                history.go(0);\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleOpen = (image) => {\r\n        setSelectedImage(image)\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleCloseAndBuy = () => {\r\n        setOpen(false);\r\n        onBuy();\r\n    };\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#b9b9b9', minHeight: '100vh' }}>\r\n            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: 15, justifyContent: 'center', padding: '5%' }}>\r\n\r\n\r\n                {images.sort((a, b) => {\r\n\r\n                    if (user.ownedImages.includes(a._id)) {\r\n                        return -1\r\n                    } else if (user.ownedImages.includes(b._id)) {\r\n                        return 1\r\n                    } else {\r\n                        return 0\r\n                    }\r\n\r\n                }).map(item => (\r\n                    <Image\r\n                        handleOpen={handleOpen}\r\n                        key={item._id}\r\n                        {...item}\r\n                        inProfile={false}\r\n                        owned={user.ownedImages.includes(item._id)}\r\n\r\n                    />\r\n                ))}\r\n\r\n\r\n                <Modale open={open} handleCloseAndBuy={handleCloseAndBuy} handleCancel={handleCancel} selectedImage={selectedImage} />\r\n\r\n\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","C:\\codes\\xaasfarm\\client\\src\\components\\Modale.js",[],"C:\\codes\\xaasfarm\\client\\src\\components\\Image.js",["63"],{"ruleId":"64","severity":1,"message":"65","line":50,"column":6,"nodeType":"66","endLine":50,"endColumn":8,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":11,"column":11,"nodeType":"70","messageId":"71","endLine":11,"endColumn":23},{"ruleId":"68","severity":1,"message":"72","line":14,"column":11,"nodeType":"70","messageId":"71","endLine":14,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":71,"column":21,"nodeType":"75","endLine":71,"endColumn":161},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"68","severity":1,"message":"80","line":12,"column":5,"nodeType":"70","messageId":"71","endLine":12,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":89,"column":29,"nodeType":"83","messageId":"84","endLine":89,"endColumn":30,"suggestions":"85"},{"ruleId":"73","severity":1,"message":"74","line":106,"column":21,"nodeType":"75","endLine":106,"endColumn":161},{"ruleId":"68","severity":1,"message":"86","line":11,"column":12,"nodeType":"70","messageId":"71","endLine":11,"endColumn":25},{"ruleId":"68","severity":1,"message":"87","line":11,"column":27,"nodeType":"70","messageId":"71","endLine":11,"endColumn":43},{"ruleId":"68","severity":1,"message":"88","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":7,"column":13,"nodeType":"75","endLine":11,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["89"],"no-unused-vars","'ShowSettings' is assigned a value but never used.","Identifier","unusedVar","'closeBurger' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'KeyboardTimePicker' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["92","93"],"'selectedImage' is assigned a value but never used.","'setSelectedImage' is assigned a value but never used.","'Button' is defined but never used.",{"desc":"94","fix":"95"},"no-global-assign","no-unsafe-negation",{"messageId":"96","fix":"97","desc":"98"},{"messageId":"99","fix":"100","desc":"101"},"Update the dependencies array to be: [history, location.pathname]",{"range":"102","text":"103"},"removeEscape",{"range":"104","text":"105"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"106","text":"107"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1274,1276],"[history, location.pathname]",[2575,2576],"",[2575,2575],"\\"]